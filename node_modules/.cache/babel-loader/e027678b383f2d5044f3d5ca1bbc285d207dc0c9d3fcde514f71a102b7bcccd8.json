{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elisk\\\\OneDrive\\\\Dokumenty\\\\IT_kurzy\\\\Codecademy\\\\projects\\\\jamming-reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\nimport Spotify from './util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [userName, setUserName] = useState(\"user name\");\n  const [userImg, setUserImg] = useState(\"profile Img\");\n  const search = useCallback(term => {\n    Spotify.search(term).then(setSearchResults);\n  }, []);\n  const addTrack = useCallback(track => {\n    if (playlistTracks.some(savedTrack => savedTrack.id === track.id)) return;\n    setPlaylistTracks(prevTracks => [...prevTracks, track]);\n  }, [playlistTracks]);\n  const removeTrack = useCallback(track => {\n    setPlaylistTracks(prevTracks => prevTracks.filter(currentTrack => currentTrack.id !== track.id));\n  }, []);\n  const updatePlaylistName = useCallback(name => {\n    setPlaylistName(name);\n  }, []);\n  const savePlaylist = useCallback(() => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName(\"New Playlist\");\n      setPlaylistTracks([]);\n    });\n  }, [playlistName, playlistTracks]);\n\n  // const getUser = useCallback(() => {\n  //   // tady tahám data uživatele a ustanovuji jeho přihlášené jméno\n  //   Spotify.getUser().then((userData) => {\n  //     console.log(\"userData\", userData)\n  //     setUserName(userData.id);\n  //     setUserImg(userData.images[0]?.url);\n  //   }).catch(error => {\n  //     console.error('Error fetching user data', error);\n  //   })\n  // }, []);\n\n  const getUser = useEffect(() => {\n    Spotify.getUser().then(userData => {\n      var _userData$images$;\n      setUserName(userData.id);\n      setUserImg((_userData$images$ = userData.images[0]) === null || _userData$images$ === void 0 ? void 0 : _userData$images$.url);\n    }).catch(error => {\n      console.error('Error fetching user data', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Jamming\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jamming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ColumnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n        className: \"SearchResults\",\n        searchResults: searchResults,\n        onAdd: addTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        className: \"Playlist\",\n        playlistName: playlistName,\n        playlistTracks: playlistTracks,\n        onNameChange: updatePlaylistName,\n        onRemove: removeTrack,\n        onSave: savePlaylist\n        // onLogin={getUser}\n        ,\n        userName: userName,\n        userImg: userImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxCwXtRE3GmfePKDVQV+pm0zA44=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","SearchBar","SearchResults","Playlist","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","userName","setUserName","userImg","setUserImg","search","term","then","addTrack","track","some","savedTrack","id","prevTracks","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","getUser","userData","_userData$images$","images","url","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onNameChange","onRemove","onSave","_c","$RefreshReg$"],"sources":["C:/Users/elisk/OneDrive/Dokumenty/IT_kurzy/Codecademy/projects/jamming-reactapp/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport SearchBar from './components/SearchBar';\r\nimport SearchResults from './components/SearchResults';\r\nimport Playlist from './components/Playlist';\r\nimport Spotify from './util/Spotify';\r\n\r\nfunction App() {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n  const [userName, setUserName] = useState(\"user name\");\r\n  const [userImg, setUserImg] = useState(\"profile Img\");\r\n\r\n  const search = useCallback((term) => {\r\n    Spotify.search(term).then(setSearchResults);\r\n  }, []);\r\n\r\n  const addTrack = useCallback(\r\n    (track) => {\r\n      if (playlistTracks.some((savedTrack) => savedTrack.id === track.id))\r\n        return;\r\n\r\n      setPlaylistTracks((prevTracks) => [...prevTracks, track]);\r\n    },\r\n    [playlistTracks]\r\n  );\r\n\r\n  const removeTrack = useCallback((track) =>{\r\n    setPlaylistTracks((prevTracks) =>\r\n      prevTracks.filter((currentTrack) => currentTrack.id !== track.id)\r\n      );\r\n  }, []);\r\n\r\n  const updatePlaylistName = useCallback((name) => {\r\n    setPlaylistName(name);\r\n  }, []);\r\n\r\n  const savePlaylist = useCallback(() => {\r\n    const trackUris = playlistTracks.map((track) => track.uri);\r\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\r\n      setPlaylistName(\"New Playlist\");\r\n      setPlaylistTracks([]);\r\n    });\r\n  }, [playlistName, playlistTracks]);\r\n\r\n\r\n  // const getUser = useCallback(() => {\r\n  //   // tady tahám data uživatele a ustanovuji jeho přihlášené jméno\r\n  //   Spotify.getUser().then((userData) => {\r\n  //     console.log(\"userData\", userData)\r\n  //     setUserName(userData.id);\r\n  //     setUserImg(userData.images[0]?.url);\r\n  //   }).catch(error => {\r\n  //     console.error('Error fetching user data', error);\r\n  //   })\r\n  // }, []);\r\n\r\n  const getUser = useEffect( () => {\r\n    Spotify.getUser().then( (userData) => {\r\n      setUserName(userData.id);\r\n      setUserImg(userData.images[0]?.url);\r\n    }).catch(error => {\r\n      console.error('Error fetching user data', error);\r\n    }) \r\n  }, []);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <header className='Jamming'>\r\n        <h1>Jamming</h1>\r\n      </header>\r\n      <div>\r\n        <SearchBar onSearch={search}/>\r\n      </div>\r\n      <div className='ColumnsContainer'>\r\n        <SearchResults className='SearchResults' searchResults={searchResults} onAdd={addTrack} />\r\n        <Playlist \r\n          className='Playlist' \r\n          playlistName={playlistName}\r\n          playlistTracks={playlistTracks}\r\n          onNameChange={updatePlaylistName}\r\n          onRemove={removeTrack}\r\n          onSave={savePlaylist}\r\n          // onLogin={getUser}\r\n          userName={userName}\r\n          userImg={userImg}\r\n        />\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}