{"ast":null,"code":"import _toConsumableArray from\"C:/Users/elisk/OneDrive/Dokumenty/IT_kurzy/Codecademy/projects/jamming-reactapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/elisk/OneDrive/Dokumenty/IT_kurzy/Codecademy/projects/jamming-reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useCallback}from'react';import'./App.css';import SearchBar from'./components/SearchBar';import SearchResults from'./components/SearchResults';import Playlist from'./components/Playlist';import Spotify from'./util/Spotify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),searchResults=_useState2[0],setSearchResults=_useState2[1];var _useState3=useState(\"New Playlist\"),_useState4=_slicedToArray(_useState3,2),playlistName=_useState4[0],setPlaylistName=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),playlistTracks=_useState6[0],setPlaylistTracks=_useState6[1];var search=useCallback(function(term){Spotify.search(term).then(setSearchResults);},[]);var addTrack=useCallback(function(track){if(playlistTracks.some(function(savedTrack){return savedTrack.id===track.id;}))return;setPlaylistTracks(function(prevTracks){return[].concat(_toConsumableArray(prevTracks),[track]);});},[playlistTracks]);var removeTrack=useCallback(function(track){setPlaylistTracks(function(prevTracks){return prevTracks.filter(function(currentTrack){return currentTrack.id!==track.id;});});},[]);var updatePlaylistName=useCallback(function(name){setPlaylistName(name);},[]);var savePlaylist=useCallback(function(){var trackUris=playlistTracks.map(function(track){return track.uri;});Spotify.savePlaylist(playlistName,trackUris).then(function(){setPlaylistName(\"New Playlist\");setPlaylistTracks([]);});},[playlistName,playlistTracks]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"Jamming\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Jamming\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SearchBar,{onSearch:search})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ColumnsContainer\",children:[/*#__PURE__*/_jsx(SearchResults,{className:\"SearchResults\",searchResults:searchResults,onAdd:addTrack}),/*#__PURE__*/_jsx(Playlist,{className:\"Playlist\",playlistName:playlistName,playlistTracks:playlistTracks,onNameChange:updatePlaylistName,onRemove:removeTrack,onSave:savePlaylist})]})]});};export default App;","map":{"version":3,"names":["React","useState","useCallback","SearchBar","SearchResults","Playlist","Spotify","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useState3","_useState4","playlistName","setPlaylistName","_useState5","_useState6","playlistTracks","setPlaylistTracks","search","term","then","addTrack","track","some","savedTrack","id","prevTracks","concat","_toConsumableArray","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","className","children","onSearch","onAdd","onNameChange","onRemove","onSave"],"sources":["C:/Users/elisk/OneDrive/Dokumenty/IT_kurzy/Codecademy/projects/jamming-reactapp/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport './App.css';\n\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Playlist from './components/Playlist';\nimport Spotify from './util/Spotify';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const search = useCallback((term) => {\n    Spotify.search(term).then(setSearchResults);\n  }, []);\n\n  const addTrack = useCallback(\n    (track) => {\n      if (playlistTracks.some((savedTrack) => savedTrack.id === track.id))\n        return;\n\n      setPlaylistTracks((prevTracks) => [...prevTracks, track]);\n    },\n    [playlistTracks]\n  );\n\n  const removeTrack = useCallback((track) =>{\n    setPlaylistTracks((prevTracks) =>\n      prevTracks.filter((currentTrack) => currentTrack.id !== track.id)\n      );\n  }, []);\n\n  const updatePlaylistName = useCallback((name) => {\n    setPlaylistName(name);\n  }, []);\n\n  const savePlaylist = useCallback(() => {\n    const trackUris = playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName(\"New Playlist\");\n      setPlaylistTracks([]);\n    });\n  }, [playlistName, playlistTracks]);\n\n\n  return (\n    <div className='App'>\n      <header className='Jamming'>\n        <h1>Jamming</h1>\n      </header>\n      <div>\n        <SearchBar onSearch={search}/>\n      </div>\n      <div className='ColumnsContainer'>\n        <SearchResults className='SearchResults' searchResults={searchResults} onAdd={addTrack} />\n        <Playlist \n          className='Playlist' \n          playlistName={playlistName}\n          playlistTracks={playlistTracks}\n          onNameChange={updatePlaylistName}\n          onRemove={removeTrack}\n          onSave={savePlaylist}\n        />\n      </div> \n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}